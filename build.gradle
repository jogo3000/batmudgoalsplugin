/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Matti' at '20/10/18 12:09' with Gradle 3.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
sourceCompatibility=8.0

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile files('lib/bat_interfaces.jar')

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'org.junit.platform:junit-platform-launcher:1.3.1'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testCompile "org.mockito:mockito-core:2.+" 
    testCompile 'org.mockito:mockito-junit-jupiter:2.+'
}
